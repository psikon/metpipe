{"name":"metPipe","tagline":"A metagenomic pipeline from proprocessing to annotations and analysis for metagenomic Reads","body":"# metPipe\r\n\r\nThe metagenomic pipeline metPipe bundles a number of bioinformatical tools for analyising metagenomic short read datasets \r\nfrom RAW data to complete taxonomically annotated data. \r\n\r\n## 1.) Requirements\r\n### a) Hardware\r\n\r\nThe metPipe Pipeline was designed to run on s standard 64-bit Linux computer. For the analysis of short datasets and tutorial purposes (without a run of MetaCV) a minimum of 8 GB RAM is required. To analyse larger datasets and include a run of MetaCV 32 GB RAM and a multiple CPU-Cores are recommended. For the installation of the pipeline and the required databases a disk space 77 GB will be used. \r\n\r\n### b) Software\r\n\r\nThe Pipeline was developed with Python 2.7 and R 2.15 for standard Linux 64-bit workstations.  Before running the install script please check the following dependencies:\r\n\r\n* Python >= 2.6\r\n* R >= 2.15  (for R >= 3.0 useDevel() - Parameter for Bioconductor - biocLite must be assigned; see: http://www.bioconductor.org/developers/useDevel/)\r\n* Java Runtime Environment (z.B. open-jre)\r\n* gcc >= 4.8.0\r\n* git\r\n* libboost-dev\r\n* libboost-regex-dev\r\n* libxerces-c-dev \r\n* libsqlite3-dev\r\n\r\n### 2.) Installation\r\n\r\nAfter downloading the software from https://github.com/psikon/metpipe, unpack the files and run the installation script with following command :\r\n\r\n```bash\r\n./installer.sh\r\n```\r\n\r\nAll external dependencies will be downloaded and installed in a local folder. The installation process may take some minutes or hours, depending on the connection speed and the databases.\r\n\r\n### 3.) Usage:\r\n\r\n```\r\nusage: metpipe.py [-h] [--version] [-v] [-t THREADS] [-p PARAM]\r\n                  [-s {preprocessing,assembly,annotation,analysis}]\r\n                  [-o OUTPUT] [-a {metavelvet,flash,both}]\r\n                  [-c {metacv,blastn,both}] [--use_contigs] [--notrimming]\r\n                  [--noquality] [--noreport] [--merge]\r\n                  input [input ...]\r\n\r\npositional arguments:\r\n  input                 single or paired input files in <fastq> format\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --version             show program's version number and exit\r\n  -v                    more detailed output (default = False)\r\n  -t THREADS            number of threads to use (default = 7)\r\n  -p PARAM              use alternative config file (default = parameter.conf)\r\n  -s {preprocessing,assembly,annotation,analysis}\r\n                        skip steps in the pipeline (default = None)\r\n  -o OUTPUT             use alternative output folder\r\n  -a {metavelvet,flash,both}\r\n                        assembling program to use (default = MetaVelvet)\r\n  -c {metacv,blastn,both}\r\n                        classifier to use for annotation (default = both)\r\n  --use_contigs         should MetaCV use assembled Reads or RAW Reads\r\n                        (default = RAW\r\n  --notrimming          trim and filter input reads? (default = True)\r\n  --noquality           create no quality report (default = True)\r\n  --noreport            create no pie chart with the annotated taxonomical\r\n                        data (default = True)\r\n  --merge               merge concatinated reads with not concatinated\r\n                        (default = False)\r\n```\r\n\r\nAll step specific settings can be found in the parameter.conf file in the root dir of this program.\r\n\r\n### 4.) Quickstart\r\n\r\nFor testing/tutorial purporses a little test dataset is included in the root folder. This data include 15.000 paired-end MiSeq reads with a length of 250bp.\r\n\r\nstart the pipeline with the following command:\r\n\r\n```bash\r\n./metpipe.sh -t 7 -p parameter.conf -o ../example -a flash -c both sequences/forward.fastq sequences/reverse/fastq\r\n```\r\nAfter processing you will get up to 5 files in the analysis folder:\r\n\r\n* blastn.db       - blast XML results parsed in SQL Lite DB\r\n* annotated.db    - taxonomical annotated SQL Lite DB\r\n* bacteria.db     - seperated bacteria from SQL Lite DB\t\r\n* eukaryota.db    - seperated eukaryota from SQL Lite DB\r\n* metpipe.html    - interactive HTML5 piechart of taxonomies\r\n\r\nThese database files can be processed by every **programming language porviding a SQL-Lite plugin**. For further analysis the statistic language **R** (http://www.r-project.org/) will be used.\r\n\r\nTo access the data in the database the R package **metaR**, provided with pipeline have to be loaded:\r\n\r\n```bash\r\nlibrary(metaR)\r\n```\r\n\r\nNow the database can be loaded with following command:\r\n\r\n```bash\r\ncomplete_db <- taxonomyReportDBConnect(\"result/analysis/annotated.db\")\r\n```\r\nTo see, that the database is correctly loaded, calling the object complete will print you something like that:\r\n\r\n```bash\r\n‘taxonomyReportDB’ object with:\r\n| 79 querys | 99 hits | 99 hsps | 99 taxonomies |\r\n```\r\nTo be continued ...\r\n \r\n### 5.) Contact\r\n\r\nIf you encounter a problem/bug, please first check the wiki page:\r\nhttps://github.com/psikon/metpipe/wiki\r\nand the known issues pages:\r\nhttps://github.com/psikon/metpipe/issues\r\nto see if it has already been documented.\r\n\r\nIf not, please report the issue either using the contact information below or \r\nby submitting a new issue online. Please include information on your run,\r\nand every log file produced by your run.\r\n\r\nPhilipp Sehnert: philipp.sehnert@gmail.com\r\n\r\n### 6.) Citing\r\n\r\n\r\n\r\n\t\t\r\n\t \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}